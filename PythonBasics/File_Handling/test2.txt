Welcome back to Python tutorial. So far, we have read about the basic syntax of Python, and python data types, and operators in python. We’ve also read about various constructs like lists in python, tuples, sets, dictionaries in python, and strings. Now, we forward to deeper parts of the language. After this tutorial on Python Function, you will be able to use functions in Python program of your own. Apart from that, we have also seen some Python built-in functions in our tutorials on lists, strings in python, tuples, dictionaries, sets, and Booleans. So now let’s begin with the Python function tutorial where we cove Python built – in functions, Python recursion, Python Lambda, calling a function and other Python Function Explained.
A function in any programming language is a sequence of statements in a certain order, given a name. When called, those statements are executed. So we don’t have to write the code again and again for each [type of] data that we want to apply it to. This is called code re-usability. If you encounter any doubt or query in Python function tutorial, please ask us in comments.
For simplicity purposes, we will divide this lesson in two parts. First, we will talk about user-defined functions. Python lets us group a sequence of statements into a single entity, called a function. A Python function may or may not have a name. We’ll look at functions without a name later in this tutorial.
As we said earlier, a function doesn’t need to have a name. A lambda expression in Python allows us to create anonymous python functions, and we use the ‘lambda’ keyword for it. The following is the syntax for a lambda expression.
lambda arguments:expression
It’s worth noting that it can have any number of arguments, but only one expression. It evaluates the value of that expression, and returns the result. Let’s take an example.